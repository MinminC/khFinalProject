<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">
 	
 	<resultMap type="member" id="memberResultSet">
 		<result column="USER_NO" property="userNo"/>
 		<result column="USER_ID" property="userId"/>
 		<result column="USER_PWD" property="userPwd"/>
 		<result column="USER_NAME" property="userName"/>
 		<result column="BIRTH" property="birth"/>
 		<result column="GENDER" property="gender"/>
 		<result column="PHONE" property="phone"/>
 		<result column="EMAIL" property="email"/>
 		<result column="ENROLL_DATE" property="enrollDate"/>
 		<result column="MODIFY_DATE" property="modifyDate"/>
 		<result column="STATUS" property="status"/>
 		<result column="MO_NO" property="moNo"/>
 	</resultMap>
 
 	<resultMap type="inquiry" id="inquiryResultSet">
  		<result column="INQ_NO" property="inqNo"/>
  		<result column="USER_NO" property="userNo"/>
  		<result column="INQ_TITLE" property="inqTitle"/>
  		<result column="INQ_CONTENT" property="inqContent"/>
  		<result column="INQ_REPLY" property="inqReply"/>
  		<result column="INQ_STATUS" property="inqStatus"/>
  		<result column="STATUS" property="status"/>
  		<result column="CREATE_DATE" property="createDate"/>
  	</resultMap>
 
 	<!-- 로그인용 쿼리문 -->
 	<select id="loginMember" resultMap="memberResultSet" parameterType="member">
 		select 
 				USER_NO
 				,USER_ID
 				,USER_PWD
 				,USER_NAME
 				,BIRTH
 				,GENDER
 				,PHONE
 				,EMAIL
 				,ENROLL_DATE
 				,MODIFY_DATE
 				,STATUS
 				,MO_NO
 		from	
 				MEMBER
 		where	
 				USER_ID=#{userId}
 		and			
 				STATUS='Y'
 		
 	
 	</select>
 

 	<!-- 회원가입용 쿼리문 -->
 	
 	<insert id="insertMember" parameterType="member">
 	
 	INSERT INTO 
 				MEMBER
 						(
 						USER_NO		
 						,USER_ID
 						,USER_PWD
 						,USER_NAME
 						,BIRTH
 						,GENDER
 						,PHONE
 						,EMAIL
 						)
 					VALUES(
 							SEQ_MEM.NEXTVAL
 							,#{userId}
 							,#{userPwd}
 							,#{userName}
 							,#{birth}
 							,#{gender}
 							,#{phone}
 							,#{email}
 							)
 	</insert>
 
 	<!-- 아이디중복체크 쿼리문-->
 	<select id="idCheck" resultType="_int">
 	
 		select count(*)
 		from	member
 		where	user_id = #{checkId}
 	
 	</select>
 	
 	<!-- 이메일 인증번호 db삽입 쿼리문-->
 	<insert id="regist" parameterType="certVo">
 			INSERT INTO CERT(
 							who, secret, when
 			)VALUES(
 					#{who},#{secret},sysdate
 			)
 	
 	</insert>
 	
 	<!-- 이메일 인증번호 확인 쿼리문 -->
 	<select id = "validate" parameterType="certVo" resultType="certVo">
 	
 		SELECT * FROM CERT
 		WHERE 
 				who = #{who}
 				and secret = #{secret}
 				and when between sysdate - 3/24/60 and sysdate<!-- 이렇게 하면 3분안에 입력해야하는거임 외우셈 -->
 	
 	</select>
 	
 	<!-- 이메일 인증번호 db삭제 쿼리문 -->
 	<delete id="remove" parameterType="certVo">
	
	DELETE CERT WHERE who = #{who} and secret = #{secret}
	
	</delete>
	
	<!-- 비밀번호 찾기 쿼리문 -->
	<select id="searchPwd" parameterType="member" resultType="_int">
	
	SELECT COUNT(*)
	FROM	MEMBER
	WHERE	USER_ID=#{userId}
	AND		EMAIL=#{email}
	
	</select>
	<!-- 비밀번호 찾기 임시비밀번호로 수정 쿼리문 -->
	<update id="updatePwd" parameterType="hashMap">
	
	UPDATE  MEMBER
	SET		USER_PWD=#{encPwd}
	WHERE	USER_ID=#{m.userId}		
	AND		EMAIL=#{m.email}

	</update>
 
 	<!-- 아이디찾기 쿼리문 -->
 	<select id="searchId" parameterType="member" resultType="string">
 	
 	SELECT	SUBSTR(USER_ID,1,length(USER_ID)-3)||LPAD('*',3,'*')
 	FROM	MEMBER
 	WHERE	USER_NAME=#{userName}
 	AND		EMAIL=#{email}
 	
 	
 	</select>	
 

    <!-- 문의하기 -->
 	<insert id="insertInquiry" parameterType="inquiry">
 		INSERT INTO INQUIRY(INQ_NO, USER_NO, INQ_TITLE, INQ_CONTENT)
 		VALUES (SEQ_INQUIRY_NO.NEXTVAL, #{userNo}, #{inqTitle}, #{inqContent})
 	</insert>
 	
 	<!-- 관리자 문의내역 수(1:1문의) -->
 	<select id="selectListCount" resultType="_int">
  		SELECT COUNT(*)
  		FROM INQUIRY
  		WHERE STATUS = 'Y'
  	</select>
  	
  	<!-- inquiryListCount -->
  	<!-- 문의내역 수(1:1문의) -->
 	<select id="inquiryListCount" resultType="_int">
  		SELECT COUNT(*)
  		FROM INQUIRY
  		WHERE STATUS = 'Y'
  		  AND USER_NO = #{userNo}
  	</select>
  	
  	<!-- 관리자 1:1 문의내역 조회 -->
  	<select id="selectList" resultMap="inquiryResultSet" parameterType="inquiry">
		SELECT INQ_NO, INQ_TITLE, TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') AS "CREATE_DATE", INQ_STATUS, INQ_REPLY
		FROM INQUIRY
		WHERE STATUS = 'Y'
		ORDER BY INQ_NO DESC
	</select>
	
	<!-- inquiryList -->
	<!-- 1:1 문의내역 조회 -->
  	<select id="inquiryList" resultMap="inquiryResultSet">
		SELECT INQ_NO, INQ_TITLE, TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') AS "CREATE_DATE", INQ_STATUS, INQ_REPLY
		FROM INQUIRY
		WHERE STATUS = 'Y'
		  AND USER_NO = #{userNo}
		ORDER BY INQ_NO DESC
	</select>
	
	
	<!-- 문의 내역 수정(조회) -->
	<select id="selectInquiry" resultMap="inquiryResultSet">
		SELECT INQ_TITLE, INQ_CONTENT, INQ_NO, INQ_REPLY
		FROM INQUIRY
		WHERE STATUS = 'Y'
		AND INQ_NO = #{No}
	</select>
	
	<!-- 문의 내역 수정 -->
	<update id="updateInquiry" parameterType="inquiry">
		UPDATE INQUIRY
		SET 
		   INQ_TITLE = #{inqTitle}
		   ,INQ_CONTENT = #{inqContent}
		WHERE INQ_NO = #{inqNo}
	</update>
	
	<!-- 나의 문의 삭제 -->
	<update id="deleteInquiry" parameterType="_int">
		UPDATE INQUIRY
		SET STATUS = 'N'
		WHERE INQ_NO = #{No}
	</update>
	
	<!-- 개인정보변경 -->
	<update id="updateEnrollForm" parameterType="member">
		UPDATE MEMBER
		SET PHONE = #{phone},
			EMAIL = #{email}
		WHERE USER_ID = #{userId}
	</update>
	
	<!-- 댓글 등록 -->
	<update id="registReply" parameterType="inquiry">
		UPDATE INQUIRY
		 SET INQ_REPLY = #{inqReply}
		  WHERE INQ_NO = #{inqNo}
	</update>
	
	<!-- 회원탈퇴 -->
	<update id="deleteMember" parameterType="_int">
		UPDATE MEMBER
		   SET STATUS = 'N'
		 WHERE USER_NO = #{userNo}
	</update>

	<!-- updatePassword -->
	<!-- 비밀번호 변경 -->
	<update id="updatePassword" parameterType="member">
		UPDATE MEMBER
		   SET USER_PWD = #{userPwd}
		 WHERE USER_NO = #{userNo}
	</update>
	
</mapper>